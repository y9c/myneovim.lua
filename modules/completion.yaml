- repo: neovim/nvim-lspconfig
  on_event: BufRead
  hook_source: |-
    lua <<EOF
      require('internal.lspconfig')
    EOF

- repo: glepnir/lspsaga.nvim
  on_cmd: Lspsaga
  on_source: nvim-lspconfig

- repo: hrsh7th/nvim-compe
  on_event: InsertEnter
  hook_source: |-
    lua <<EOF
    require'compe'.setup {
      enabled = true;
      debug = false;
      min_length = 1;
      preselect = 'always';
      allow_prefix_unmatch = false;
      source = {
        path = true;
        buffer = true;
        calc = true;
        vsnip = true;
        nvim_lsp = true;
        nvim_lua = true;
        spell = true;
        tags = true;
        snippets_nvim = true;
      };
    }
    EOF

- repo: hrsh7th/vim-vsnip
  on_event: InsertCharPre
  hook_source: |-
    lua <<EOF
    vim.g.vsnip_snippet_dir = require('domain.global').snippets_dir
    EOF

- repo: aperezdc/vim-template
  # on_event: [BufReadPre, BufNewFile]
  hook_add: |
    #let g:templates_directory=['~/.config/nvim/templates']
    let g:templates_user_variables=[]
    let g:username="Ye Chang"
    let g:email="yech1990@gmail.com"
    let g:license="MIT"

- repo: Raimondi/delimitMate
  on_event: InsertEnter
  hook_source: |
    let g:delimitMate_expand_cr = 0
    let g:delimitMate_expand_space = 1
    let g:delimitMate_smart_quotes = 1
    let g:delimitMate_expand_inside_quotes = 0
    au FileType markdown let b:delimitMate_nesting_quotes = ["`"]

- repo: mattn/emmet-vim
  on_event: InsertEnter
  on_ft:
    [html, css, javascript, javascriptreact, vue, typescript, typescriptreact]
  hook_source: |
    let g:user_emmet_complete_tag = 0
    let g:user_emmet_install_global = 0
    let g:user_emmet_install_command = 0
    let g:user_emmet_mode = 'i'
