- repo: tpope/vim-dadbod

- repo: kristijanhusak/vim-dadbod-ui
  on_cmd:
    [DBUIToggle, DBUIAddConnection, DBUI, DBUIFindBuffer, DBUIRenameBuffer]
  on_source: vim-dadbod
  hook_source: |
    let g:db_ui_show_help = 0
    let g:db_ui_win_position = 'left'
    let g:db_ui_use_nerd_fonts = 1
    let g:db_ui_winwidth = 35
    let g:db_ui_save_location = getenv("HOME") . '/.cache/vim/db_ui_queries'
    let g:dbs = luaeval('require("internal.selfunc").load_dbs')()

- repo: editorconfig/editorconfig-vim
  on_ft: [go, typescript, javascript, vim, rust, markdown]

- repo: glepnir/indent-guides.nvim
  on_event: BufReadPre
  hook_source: |-
    lua <<EOF
    require('indent_guides').setup {
      even_colors = { fg ='NONE',bg='#23272e'},
      odd_colors = {fg='NONE',bg='#23272e'}
    }
    EOF

- repo: glepnir/prodoc.nvim
  on_event: BufReadPre

- repo: liuchengxu/vista.vim
  on_cmd: [Vista, Vista!, Vista!!]
  hook_source: |
    let g:vista#renderer#enable_icon = 1
    let g:vista_disable_statusline = 1
    let g:vista_default_executive = 'ctags'
    let g:vista_echo_cursor_strategy = 'floating_win'
    let g:vista_vimwiki_executive = 'markdown'
    let g:vista_executive_for = {
      \ 'vimwiki': 'markdown',
      \ 'pandoc': 'markdown',
      \ 'markdown': 'toc',
      \ 'typescript': 'nvim_lsp',
      \ 'typescriptreact': 'nvim_lsp',
      \ }

- repo: mhartington/formatter.nvim
  on_ft: [typescript, typescriptreact, lua, yaml, python]
  on_cmd: Format
  hook_source: |-
    lua <<EOF
    require('formatter').setup({
      logging = false,
      filetype = {
        typescriptreact = {
          -- prettier
          function()
              return {
                exe = "prettier",
                args = {"--stdin-filepath", vim.api.nvim_buf_get_name(0), '--single-quote'},
                stdin = true
              }
            end
        },
        typescript = {
          -- prettier
          function()
              return {
                exe = "prettier",
                args = {"--stdin-filepath", vim.api.nvim_buf_get_name(0), '--single-quote'},
                stdin = true
              }
            end
        },
        yaml = {
          -- prettier
          function()
              return {
                exe = "prettier",
                args = {"--stdin-filepath", vim.api.nvim_buf_get_name(0), '--single-quote'},
                stdin = true
              }
            end
        },
        python = {
          -- black
          function()
              return {
                exe = "black",
                args = {"-"},
                stdin = true
              }
            end
        },
        lua = {
            -- luafmt
            function()
              return {
                exe = "luafmt",
                args = {"--indent-count", 2, "--stdin"},
                stdin = true
              }
            end
          }
        }
      })
    EOF
